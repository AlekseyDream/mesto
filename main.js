(()=>{"use strict";var e={};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function r(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}e.p="";var n=function(){function e(t,r){var n=t.Card,o=t.userId,i=t.handleCardClick,a=t.handleLikeClick,u=t.handleDeleteCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._Card=n,this._name=n.name,this._link=n.link,this._cardId=n._id,this._like=n.like,this._userId=o,this._isOwner=n.owner._id,this._handleCardClick=i,this._handleLikeClick=a,this._handleDeleteCard=u,this._templateSelector=r,this._element=this._getTemplate(),this._deleteCard=this._element.querySelector(".gallery__button-delete"),this._cardLike=this._element.querySelector(".gallery__button-like"),this._cardImage=this._element.querySelector(".gallery__image"),this._cardName=this._element.querySelector(".gallery__title"),this._likeNumber=this._element.querySelector(".gallery__like-number")}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".gallery__element").cloneNode(!0)}},{key:"likeCard",value:function(e){this._like=this._Card.like,this._likeNumber.textContent=e,this._cardLike.classList.toggle("gallery__button-like_active")}},{key:"isLike",value:function(){return this._cardLike.classList.contains("gallery__button-like_active")}},{key:"showLike",value:function(){var e=this;this._like.forEach((function(t){t._id===e._userId&&e._cardLike.classList.add("gallery__button-like_active")}))}},{key:"hiddenTrash",value:function(){this.isMyCard=this._userId===this._isOwner,this.isMyCard||this._deleteCard.classList.toggle("gallery__button-delete_hidden")}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"getCardId",value:function(){return this._cardId}},{key:"generateCard",value:function(){return this._cardName.textContent=this._name,this._cardImage.alt=this._name,this._cardImage.src=this._link,this._likeNumber.textContent=this._like.length,this._setEventListeners(),this.hiddenTrash(),this.showLike(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._deleteCard.addEventListener("click",(function(){e._element.remove()})),this._cardLike.addEventListener("click",(function(){e._cardLike.classList.toggle("gallery__button-like_active")})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,l(n.key),n)}}function a(e,t,r){return t&&i(e.prototype,t),r&&i(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function u(e,t,r){return(t=l(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e){var t=function(e,t){if("object"!==o(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==o(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===o(t)?t:String(t)}e.p,e.p,e.p,e.p,e.p,e.p;var c=a((function e(t,r){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,"_showInputError",(function(e,t){var r=n._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(n._listSelector.inputErrorClass),r.textContent=t,r.classList.add(n._listSelector.errorClass)})),u(this,"_hideInputError",(function(e){var t=n._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(n._listSelector.inputErrorClass),t.classList.remove(n._listSelector.errorClass),t.textContent=""})),u(this,"_checkInputValidity",(function(e){e.validity.valid?n._hideInputError(e):n._showInputError(e,e.validationMessage)})),u(this,"_toggleButtonState",(function(){n._hasInvalidInput()?(n._buttonElement.setAttribute("disabled",!0),n._buttonElement.classList.add(n._listSelector.inactiveButtonClass)):(n._buttonElement.removeAttribute("disabled"),n._buttonElement.classList.remove(n._listSelector.inactiveButtonClass))})),u(this,"_hasInvalidInput",(function(){return n._inputList.some((function(e){return!e.validity.valid}))})),u(this,"_setEventListeners",(function(){n._toggleButtonState(),n._inputList.forEach((function(e){e.addEventListener("input",(function(){n._checkInputValidity(e),n._toggleButtonState()}))}))})),u(this,"resetValid",(function(){n._toggleButtonState(),n._inputList.forEach((function(e){n._hideInputError(e)}))})),u(this,"enableValidation",(function(){n._setEventListeners(),n._toggleButtonState()})),this._formElement=t,this._listSelector=r,this._inputList=Array.from(t.querySelectorAll(this._listSelector.inputSelector)),this._buttonElement=this._formElement.querySelector(this._listSelector.submitButtonSelector)}));function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==s(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==s(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===s(o)?o:String(o)),n)}var o}var p=function(){function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=n,this._renderer=o,this._container=document.querySelector(r)}var t,r;return t=e,(r=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(){var e=this;this._items.reverse().forEach((function(t){e._renderer(t)}))}}])&&f(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function d(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,_(n.key),n)}}function h(e,t,r){return(t=_(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _(e){var t=function(e,t){if("object"!==y(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===y(t)?t:String(t)}var m=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),h(this,"_handleEscapeKey",(function(e){"Escape"===e.key&&r.close()})),h(this,"_closeByOverlay",(function(e){e.target.classList.contains("popup")&&r.close()})),this._popup=document.querySelector(t),this._popupProfileClose=this._popup.querySelector(".popup__button-close"),this.close=this.close.bind(this)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscapeKey)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscapeKey)}},{key:"setEventListeners",value:function(){this._popupProfileClose.addEventListener("click",this.close),this._popup.addEventListener("click",this._closeByOverlay)}}])&&d(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function b(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==v(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==v(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===v(o)?o:String(o)),n)}var o}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},S.apply(this,arguments)}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(n);if(o){var r=k(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupImage=t._popup.querySelector(".popup__image"),t._popupCaption=t._popup.querySelector(".popup__caption"),t}return t=a,(r=[{key:"open",value:function(e,t){S(k(a.prototype),"open",this).call(this),this._popupImage.src=t,this._popupImage.alt=e,this._popupCaption.textContent=e}}])&&b(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(m);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function C(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==E(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==E(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===E(o)?o:String(o)),n)}var o}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},j.apply(this,arguments)}function O(e,t){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},O(e,t)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&O(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(n);if(o){var r=L(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function a(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e))._formElement=r._popup.querySelector(".popup__form"),r._handleSumbit=t,r._inputList=Array.from(r._formElement.querySelectorAll(".popup__form-input")),r._button=r._formElement.querySelector(".popup__button-save"),r}return t=a,r=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"close",value:function(){j(L(a.prototype),"close",this).call(this),this._formElement.reset()}},{key:"loading",value:function(e,t){this._button.textContent=e?"Сохранение...":t}},{key:"setEventListeners",value:function(){var e=this;j(L(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleSumbit(e._getInputValues()),e.close()}))}}],r&&C(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(m);function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function q(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==I(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===I(o)?o:String(o)),n)}var o}var T=function(){function e(t){var r=t.nameSelector,n=t.aboutSelector,o=t.profileAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.userName=document.querySelector(r),this.userAbout=document.querySelector(n),this.profileAvatar=document.querySelector(o)}var t,r;return t=e,r=[{key:"setUserAvatar",value:function(e){var t=e.profileAvatar;this.profileAvatar.src=t}},{key:"getUserInfo",value:function(){return{name:this.userName.textContent,about:this.userAbout.textContent}}},{key:"setUserInfo",value:function(e){var t=e.inputName,r=e.inputAbout;this.userName.textContent=t,this.userAbout.textContent=r}}],r&&q(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function R(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==A(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==A(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===A(o)?o:String(o)),n)}var o}var x=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,r;return t=e,(r=[{key:"_handleReply",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{headers:this._headers}).then(this._handleReply)}},{key:"getAllCards",value:function(){return fetch("".concat(this._url,"/cards"),{headers:this._headers}).then(this._handleReply)}},{key:"updateUserInfo",value:function(e){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._handleReply)}},{key:"addNewCard",value:function(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._handleReply)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleReply)}},{key:"setLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._handleReply)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._handleReply)}},{key:"updateUserAvatar",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)}).then(this._handleReply)}}])&&R(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),B=document.querySelector(".content"),U=B.querySelector(".profile__button"),N=document.querySelector(".profile__button-edit"),V=(B.querySelector(".profile__name"),B.querySelector(".profile__description"),document.querySelector(".profile__avatar"),document.querySelector(".popup_data_avatar")),D=(V.querySelector(".popup__form-input_data_avatar"),V.querySelector(".popup__form-avatar")),M=document.querySelector(".popup_data_profile-edit"),J=(M.querySelector(".popup__button-close"),M.querySelector("#popup__form-profile")),K=M.querySelector(".popup__form-input_data_name"),H=M.querySelector(".popup__form-input_data_about"),z=document.querySelector(".popup_data_card-add"),W=(z.querySelector(".popup__button-close"),z.querySelector(".popup__form-input_data_title"),z.querySelector(".popup__form-input_data_link"),z.querySelector("#popup__form-card")),$=(document.querySelector(".popup_data_image-add").querySelector(".popup__button-close"),document.querySelector(".profile__button-addCard")),F=(document.querySelector(".gallery"),document.querySelector(".popup__image"),document.querySelector(".popup__caption"),{formSelector:".popup__form",inputSelector:".popup__form-input",submitButtonSelector:".popup__button-save",inactiveButtonClass:"popup__button-save_inactive",inputErrorClass:"popup__form-input_error",errorClass:"popup__input-error_active"});function G(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var Q=new c(W,F);Q.enableValidation();var X=new c(J,F);X.enableValidation();var Y=new c(D,F);Y.enableValidation();var Z=new p({renderer:function(e){Z.addItem(ue(e))}},".gallery"),ee=new P(".popup_data_profile-edit",(function(e){ee.loading(!0),ae.updateUserInfo(e).then((function(e){ie.setUserInfo(e),ee.close()})).catch((function(e){console.log(e)})).finally((function(){ee.loading(!1,"Сохранить")}))}));ee.setEventListeners();var te=new P(".popup_data_avatar",(function(e){te.loading(!0),ae.updateUserAvatar(e).then((function(e){ie.setUserAvatar(e),te.close()})).catch((function(e){console.log(e)})).finally((function(){te.loading(!1,"Обновить")}))}));te.setEventListeners();var re=new w(".popup_data_image-add");re.setEventListeners();var ne=new P(".popup_data_card-add",(function(e){popupCard.loading(!0),ae.addNewCard(e).then((function(e){var t=ue(e);Z.addItem(t),ne.close()})).catch((function(e){console.log(e)})).finally((function(){ne.loading(!1,"Создать")}))}));ne.setEventListeners();var oe=new PopupWithConfirm(".popup_data_delete",(function(e){oe.loadingConfirm(!0),ae.deleteCard(e.getCardId()).then((function(){e.deleteCard(),oe.close()})).catch((function(e){console.log(e)})).finally((function(){oe.loadingConfirm(!1)}))})),ie=new T({nameSelector:".profile__name",infoSelector:".profile__description",profileAvatar:".profile__avatar"}),ae=new x({url:"https://mesto.nomoreparties.co/v1/cohort-62",headers:{"Content-Type":"application/json",authorization:"94c5f97f-b8cd-4838-8c4c-bf26058ba6d0"}});Promise.all([ae.getUserInfo(),ae.getAllCards()]).then((function(e){var t,r,n=(r=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,a,u=[],l=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=i.call(r)).done)&&(u.push(n.value),u.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=r.return&&(a=r.return(),Object(a)!==a))return}finally{if(c)throw o}}return u}}(t,r)||function(e,t){if(e){if("string"==typeof e)return G(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?G(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],i=n[1];userId=o._id,ie.setUserInfo(o),ie.setUserAvatar(o),Z.renderItems(i)})).catch((function(e){console.log(e)}));var ue=function(e){var t=new n({Card:e,userId,handleCardClick:function(e,t){re.open(e,t)},handleLikeClick:function(){t.isLike()?ae.deleteLike(t.getCardId()).then((function(e){t.likeCard(e.like.length)})).catch((function(e){console.log(e)})):ae.setLike(t.getCardId()).then((function(e){t.likeCard(e.like.length)})).catch((function(e){console.log(e)}))},handleDeleteCard:function(){oe.open(t)}},".gallery-template");return t.generateCard()};U.addEventListener("click",(function(){ee.open();var e=ie.getUserInfo();K.value=e.name,H.value=e.about,X.resetValid()})),$.addEventListener("click",(function(){ne.open(),Q.resetValid()})),N.addEventListener("click",(function(){Y.resetValid(),te.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
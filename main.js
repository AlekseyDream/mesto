(()=>{"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(t,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,r){if("object"!==e(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===e(i)?i:String(i)),o)}var i}var r=function(){function e(t,r){var n=t.data,o=t.userId,i=t.handleCardClick,u=t.handleLikeClick,a=t.handleDeleteCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=n,this._name=n.name,this._link=n.link,this._cardId=n._id,this._likes=n.likes,this._userId=o,this._isOwner=n.owner._id,this._handleCardClick=i,this._handleLikeClick=u,this._handleDeleteCard=a,this._templateSelector=r,this._element=this._getTemplate(),this._deleteCard=this._element.querySelector(".gallery__button-delete"),this._cardLike=this._element.querySelector(".gallery__button-like"),this._cardImage=this._element.querySelector(".gallery__image"),this._cardName=this._element.querySelector(".gallery__title"),this._likeNumber=this._element.querySelector(".gallery__like-number")}var r,n;return r=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".gallery__element").cloneNode(!0)}},{key:"likeCard",value:function(e){this._likes=this._data.likes,this._likeNumber.textContent=e,this._cardLike.classList.toggle("gallery__button-like_active")}},{key:"isLike",value:function(){return this._cardLike.classList.contains("gallery__button-like_active")}},{key:"showLike",value:function(){var e=this;this._like.forEach((function(t){t._id===e._userId&&e._cardLike.classList.add("gallery__button-like_active")}))}},{key:"hiddenTrash",value:function(){this.isMyCard=this._userId===this._isOwner,this.isMyCard||this._deleteCard.classList.toggle("gallery__button-delete_hidden")}},{key:"deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"getCardId",value:function(){return this._cardId}},{key:"generateCard",value:function(){return this._cardName.textContent=this._name,this._cardImage.alt=this._name,this._cardImage.src=this._link,this._likeNumber.textContent=this._likes.length,this._setEventListeners(),this.hiddenTrash(),this.showLike(),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._deleteCard.addEventListener("click",(function(){e._element.remove()})),this._cardLike.addEventListener("click",(function(){e._cardLike.classList.toggle("gallery__button-like_active")})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}}])&&t(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),e}();function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,a(n.key),n)}}function i(e,t,r){return t&&o(e.prototype,t),r&&o(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function u(e,t,r){return(t=a(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e){var t=function(e,t){if("object"!==n(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===n(t)?t:String(t)}var l=i((function e(t,r){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,"_showInputError",(function(e,t){var r=n._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(n._listSelector.inputErrorClass),r.textContent=t,r.classList.add(n._listSelector.errorClass)})),u(this,"_hideInputError",(function(e){var t=n._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(n._listSelector.inputErrorClass),t.classList.remove(n._listSelector.errorClass),t.textContent=""})),u(this,"_checkInputValidity",(function(e){e.validity.valid?n._hideInputError(e):n._showInputError(e,e.validationMessage)})),u(this,"_toggleButtonState",(function(){n._hasInvalidInput()?(n._buttonElement.setAttribute("disabled",!0),n._buttonElement.classList.add(n._listSelector.inactiveButtonClass)):(n._buttonElement.removeAttribute("disabled"),n._buttonElement.classList.remove(n._listSelector.inactiveButtonClass))})),u(this,"_hasInvalidInput",(function(){return n._inputList.some((function(e){return!e.validity.valid}))})),u(this,"_setEventListeners",(function(){n._toggleButtonState(),n._inputList.forEach((function(e){e.addEventListener("input",(function(){n._checkInputValidity(e),n._toggleButtonState()}))}))})),u(this,"resetValid",(function(){n._toggleButtonState(),n._inputList.forEach((function(e){n._hideInputError(e)}))})),u(this,"enableValidation",(function(){n._setEventListeners(),n._toggleButtonState()})),this._formElement=t,this._listSelector=r,this._inputList=Array.from(t.querySelectorAll(this._listSelector.inputSelector)),this._buttonElement=this._formElement.querySelector(this._listSelector.submitButtonSelector)}));function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==c(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==c(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===c(o)?o:String(o)),n)}var o}var f=function(){function e(t,r){var n=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=n,this._container=document.querySelector(r)}var t,r;return t=e,(r=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.reverse().forEach((function(e){t._renderer(e)}))}}])&&s(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function y(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,h(n.key),n)}}function d(e,t,r){return(t=h(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function h(e){var t=function(e,t){if("object"!==p(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===p(t)?t:String(t)}var _=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),d(this,"_handleEscapeKey",(function(e){"Escape"===e.key&&r.close()})),d(this,"_closeByOverlay",(function(e){e.target.classList.contains("popup")&&r.close()})),this._popup=document.querySelector(t),this._popupProfileClose=this._popup.querySelector(".popup__button-close"),this.close=this.close.bind(this)}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscapeKey)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscapeKey)}},{key:"setEventListeners",value:function(){this._popupProfileClose.addEventListener("click",this.close),this._popup.addEventListener("click",this._closeByOverlay)}}])&&y(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function v(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==m(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===m(o)?o:String(o)),n)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},b.apply(this,arguments)}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var w=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(u,e);var t,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(n);if(o){var r=S(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImage=t._popup.querySelector(".popup__image"),t._popupCaption=t._popup.querySelector(".popup__caption"),t}return t=u,(r=[{key:"open",value:function(e,t){b(S(u.prototype),"open",this).call(this),this._popupImage.src=t,this._popupImage.alt=e,this._popupCaption.textContent=e}}])&&v(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),u}(_);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function E(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==k(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==k(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===k(o)?o:String(o)),n)}var o}function O(){return O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},O.apply(this,arguments)}function j(e,t){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},j(e,t)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var P=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(u,e);var t,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(n);if(o){var r=C(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._formElement=r._popup.querySelector(".popup__form"),r._handleSumbit=t,r._inputList=Array.from(r._formElement.querySelectorAll(".popup__form-input")),r._button=r._formElement.querySelector(".popup__button-save"),r}return t=u,r=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"close",value:function(){O(C(u.prototype),"close",this).call(this),this._formElement.reset()}},{key:"loading",value:function(e,t){this._button.textContent=e?"Сохранение...":t}},{key:"setEventListeners",value:function(){var e=this;O(C(u.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleSumbit(e._getInputValues()),e.close()}))}}],r&&E(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),u}(_);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function I(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==L(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==L(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===L(o)?o:String(o)),n)}var o}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},q.apply(this,arguments)}function R(e,t){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},R(e,t)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(u,e);var t,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(n);if(o){var r=T(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._form=r._popup.querySelector(".popup__form"),r._button=r._form.querySelector(".popup__button-save"),r._handleDeleteFormSubmit=t,r._cardInfo={},r}return t=u,(r=[{key:"open",value:function(e){q(T(u.prototype),"open",this).call(this),this._cardInfo=e}},{key:"loadingConfirm",value:function(e){this._button.textContent=e?"Удаление...":"Да"}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleDeleteFormSubmit(e._cardInfo)})),q(T(u.prototype),"setEventListeners",this).call(this)}}])&&I(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),u}(_);function x(e){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},x(e)}function B(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==x(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==x(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===x(o)?o:String(o)),n)}var o}var U=function(){function e(t){var r=t.nameSelector,n=t.aboutSelector,o=t.profileAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.userName=document.querySelector(r),this.userAbout=document.querySelector(n),this.profileAvatar=document.querySelector(o)}var t,r;return t=e,(r=[{key:"setUserAvatar",value:function(e){var t=e.avatar;this.profileAvatar.src=t}},{key:"getUserInfo",value:function(){return{name:this.userName.textContent,about:this.userAbout.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,r=e.about;this.userName.textContent=t,this.userAbout.textContent=r}}])&&B(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function N(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==D(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==D(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(n.key),"symbol"===D(o)?o:String(o)),n)}var o}var V,M=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,r;return t=e,(r=[{key:"_handleReply",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{headers:this._headers}).then(this._handleReply)}},{key:"getAllCards",value:function(){return fetch("".concat(this._url,"/cards"),{headers:this._headers}).then(this._handleReply)}},{key:"updateUserInfo",value:function(e){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._handleReply)}},{key:"addNewCard",value:function(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._handleReply)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleReply)}},{key:"setLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._handleReply)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._handleReply)}},{key:"updateUserAvatar",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify(e)}).then(this._handleReply)}}])&&N(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),J=document.querySelector(".content"),K=J.querySelector(".profile__button"),F=document.querySelector(".profile__button-edit"),H=(J.querySelector(".profile__name"),J.querySelector(".profile__description"),document.querySelector(".profile__avatar"),document.querySelector(".popup_data_avatar")),z=(H.querySelector(".popup__form-input_data_avatar"),H.querySelector(".popup__form-avatar")),$=document.querySelector(".popup_data_profile-edit"),G=($.querySelector(".popup__button-close"),$.querySelector("#popup__form-profile")),Q=$.querySelector(".popup__form-input_data_name"),W=$.querySelector(".popup__form-input_data_about"),X=document.querySelector(".popup_data_card-add"),Y=(X.querySelector(".popup__button-close"),X.querySelector(".popup__form-input_data_title"),X.querySelector(".popup__form-input_data_link"),X.querySelector("#popup__form-card")),Z=(document.querySelector(".popup_data_image-add").querySelector(".popup__button-close"),document.querySelector(".profile__button-addCard")),ee=(document.querySelector(".gallery"),document.querySelector(".popup__image"),document.querySelector(".popup__caption"),{formSelector:".popup__form",inputSelector:".popup__form-input",submitButtonSelector:".popup__button-save",inactiveButtonClass:"popup__button-save_inactive",inputErrorClass:"popup__form-input_error",errorClass:"popup__input-error_active"});function te(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var re=new l(Y,ee);re.enableValidation();var ne=new l(G,ee);ne.enableValidation();var oe=new l(z,ee);oe.enableValidation();var ie=new f({renderer:function(e){ie.addItem(ye(e))}},".gallery"),ue=new P(".popup_data_profile-edit",(function(e){ue.loading(!0),pe.updateUserInfo(e).then((function(e){fe.setUserInfo(e),ue.close()})).catch((function(e){console.log(e)})).finally((function(){ue.loading(!1,"Сохранить")}))}));ue.setEventListeners();var ae=new P(".popup_data_avatar",(function(e){ae.loading(!0),pe.updateUserAvatar(e).then((function(e){fe.setUserAvatar(e),ae.close()})).catch((function(e){console.log(e)})).finally((function(){ae.loading(!1,"Обновить")}))}));ae.setEventListeners();var le=new w(".popup_data_image-add");le.setEventListeners();var ce=new P(".popup_data_card-add",(function(e){ce.loading(!0),pe.addNewCard(e).then((function(e){var t=ye(e);ie.addItem(t),ce.close()})).catch((function(e){console.log(e)})).finally((function(){ce.loading(!1,"Создать")}))}));ce.setEventListeners();var se=new A(".popup_data_delete",(function(e){se.loadingConfirm(!0),pe.deleteCard(e.getCardId()).then((function(){e.deleteCard(),se.close()})).catch((function(e){console.log(e)})).finally((function(){se.loadingConfirm(!1)}))})),fe=new U({nameSelector:".profile__name",aboutSelector:".profile__description",profileAvatar:".profile__avatar"}),pe=new M({url:"https://mesto.nomoreparties.co/v1/cohort-62",headers:{"Content-Type":"application/json",authorization:"94c5f97f-b8cd-4838-8c4c-bf26058ba6d0"}});Promise.all([pe.getUserInfo(),pe.getAllCards()]).then((function(e){var t,r,n=(r=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i,u,a=[],l=!0,c=!1;try{if(i=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;l=!1}else for(;!(l=(n=i.call(r)).done)&&(a.push(n.value),a.length!==t);l=!0);}catch(e){c=!0,o=e}finally{try{if(!l&&null!=r.return&&(u=r.return(),Object(u)!==u))return}finally{if(c)throw o}}return a}}(t,r)||function(e,t){if(e){if("string"==typeof e)return te(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?te(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],i=n[1];V=o._id,fe.setUserInfo(o),fe.setUserAvatar(o),ie.renderItems(i)})).catch((function(e){console.log(e)}));var ye=function(e){var t=new r({data:e,userId:V,handleCardClick:function(e,t){le.open(e,t)},handleLikeClick:function(){t.isLike()?pe.deleteLike(t.getCardId()).then((function(e){t.likeCard(e.likes.length)})).catch((function(e){console.log(e)})):pe.setLike(t.getCardId()).then((function(e){t.likeCard(e.likes.length)})).catch((function(e){console.log(e)}))},handleDeleteCard:function(){se.open(t)}},".gallery-template");return t.generateCard()};K.addEventListener("click",(function(){ue.open();var e=fe.getUserInfo();Q.value=e.name,W.value=e.about,ne.resetValid()})),Z.addEventListener("click",(function(){ce.open(),re.resetValid()})),F.addEventListener("click",(function(){oe.resetValid(),ae.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,